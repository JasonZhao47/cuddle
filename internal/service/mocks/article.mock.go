// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/article.go
//
// Generated by this command:
//
//	mockgen -source=internal/service/article.go -destination=internal/service/mocks/article.mock.go -package=svcmock
//
// Package svcmock is a generated GoMock package.
package svcmock

import (
	reflect "reflect"

	domain "github.com/jasonzhao47/cuddle/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockArticleService is a mock of ArticleService interface.
type MockArticleService struct {
	ctrl     *gomock.Controller
	recorder *MockArticleServiceMockRecorder
}

// MockArticleServiceMockRecorder is the mock recorder for MockArticleService.
type MockArticleServiceMockRecorder struct {
	mock *MockArticleService
}

// NewMockArticleService creates a new mock instance.
func NewMockArticleService(ctrl *gomock.Controller) *MockArticleService {
	mock := &MockArticleService{ctrl: ctrl}
	mock.recorder = &MockArticleServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArticleService) EXPECT() *MockArticleServiceMockRecorder {
	return m.recorder
}

// Detail mocks base method.
func (m *MockArticleService) Detail(arg0 int64) *domain.Article {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Detail", arg0)
	ret0, _ := ret[0].(*domain.Article)
	return ret0
}

// Detail indicates an expected call of Detail.
func (mr *MockArticleServiceMockRecorder) Detail(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Detail", reflect.TypeOf((*MockArticleService)(nil).Detail), arg0)
}
