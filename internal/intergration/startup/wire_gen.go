// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"github.com/google/wire"
	"github.com/jasonzhao47/cuddle/internal/repository"
	"github.com/jasonzhao47/cuddle/internal/repository/cache"
	"github.com/jasonzhao47/cuddle/internal/repository/dao"
	"github.com/jasonzhao47/cuddle/internal/service"
	"github.com/jasonzhao47/cuddle/internal/web"
)

// Injectors from wire.go:

func InitArticleHandler(dao2 dao.ArticleDAO, activityDao dao.UserActivityDAO) *web.ArticleHandler {
	cmdable := InitRedis()
	articleCache := cache.NewArticleCache(cmdable)
	articleRepository := repository.NewArticleRepository(dao2, articleCache)
	articleService := service.NewArticleService(articleRepository)
	userActivityCache := cache.NewUserActivityCache(cmdable)
	userActivityRepository := repository.NewCacheUserActivityRepository(userActivityCache, activityDao)
	userActivityService := service.NewUserActivityService(userActivityRepository)
	logger := InitLog()
	articleHandler := web.NewArticleHandler(articleService, userActivityService, logger)
	return articleHandler
}

// wire.go:

var (
	thirdPartyDep          = wire.NewSet(InitDB, InitLog, InitRedis)
	articleServiceProvider = wire.NewSet(dao.NewArticleGormDAO, dao.NewUserActivityDAO)
)
